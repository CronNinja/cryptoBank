{"version":3,"sources":["js/Transactor.jsx","js/USDValue.jsx","js/Exchange.jsx","js/GetData.js","js/Account.jsx","js/History.jsx","App.js","reportWebVitals.js","index.js"],"names":["Transactor","onChange","isDeposit","validTransaction","currency","id","Number","type","step","style","width","min","value","disabled","USDValue","state","data","a","axios","get","this","props","symbol","headers","then","response","setState","parseFloat","last_price_usd","toFixed","total","Component","Exchange","letExchange","useState","show","setShow","setSelectedExchage","handleClose","Button","variant","onClick","Modal","onHide","animation","Header","closeButton","Title","Body","onSubmit","event","preventDefault","form","e","selectedValue","target","handleModeSelect","name","map","toUpperCase","Footer","GetDate","Date","now","Currency","totals","setTotals","deposit","setDeposit","totalState","setTotalState","setIsDeposit","atmMode","setAtmMode","setValidTransaction","status","Card","newTotal","timestamp","action","Subtitle","Text","returnValue","History","Table","striped","bordered","hover","size","t","toString","getTime","createRow","initDate","initialTotals","App","Jumbotron","fluid","Container","CardDeck","sort","b","filter","v","i","findIndex","localeCompare","paddingTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5569026.chunk.js","sourcesContent":["const Transactor = ({ onChange, isDeposit, validTransaction, currency }) => {\n  const choice = ['Deposit', 'Withdraw'];\n\n  return (\n    <span id={\"transactions.\" + currency} key={\"transactions.\" + currency}>\n    <label>\n      {choice[Number(!isDeposit)]}:\n      <input id=\"number-input\" type=\"number\" step=\"any\" onChange={onChange} style={{ width: '5rem' }} min=\"0\"></input>\n    </label>\n    <input type=\"submit\" value=\"Submit\" id=\"submit-input\" disabled={!validTransaction}></input>\n    </span>\n  );\n};\n\nexport default Transactor","import axios from 'axios'\nimport React, {Component} from 'react'\n\nexport default class USDValue extends Component {\n  constructor(){\n    super();\n    this.state = { \n      data: []}\n  }\n  async componentDidMount() {\n  // const response = await API(this.props.symbol);\n  //  this.setState({ data: response.data });\n\n    axios.get(`https://coincodex.com/api/coincodex/get_coin/${this.props.symbol}`,\n      { headers: {'X-Custom-Header': 'foobar'} }\n    )\n      .then(response => {\n        this.setState({ data: response.data });\n      })\n  }\n  render() {\n    return (\n      <>\n        { parseFloat(this.state.data.last_price_usd).toFixed(4) * this.props.total}\n      </>\n    )\n  }\n}","import Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\n\nconst Exchange = ({symbol, letExchange, total}) => {\n  const [show, setShow] = useState((total > 0));\n  const [selectedExchange, setSelectedExchage] = useState(\"\");\n  const [canExchange, setCanExchange] = useState(letExchange);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const currencies = ['USD', 'BTC', 'ETH', 'XRP'];\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  }  \n  const handleModeSelect = (event) => {\n    const selectedValue = event.target.value;\n    if(selectedValue){\n      setSelectedExchage(selectedValue);\n    }\n  }\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow} disabled={total <= 0}>\n        { total > 0 ? \"Exchange\" : \"Fund Account\" }\n      </Button>\n\n      <Modal show={show} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Exchange: { symbol }</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <form onSubmit={handleSubmit} form={\"form.exchange.\" + symbol}>\n        <label>Action:</label>\n          <select onChange={(e) => handleModeSelect(e)} name=\"exchangeWith\" id=\"exchange-select\">\n            <option id=\"no-selection\" value=\"\"></option>\n            {\n              currencies.map(currency => {\n                if(currency !== symbol){\n                  return (<option id={\"exchange-option-\" + currency} value={currency} key={\"exchange-option-\" + currency}>{currency.toUpperCase()}</option>)\n                }\n                return null;\n              })\n            }\n          </select>\n        </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Exchange","const GetDate = () => { \n  return new Date(Date.now());\n}\n\nexport default GetDate","import React, { useState} from 'react';\nimport Transactor from './Transactor';\nimport Card from 'react-bootstrap/Card';\nimport USDValue from './USDValue';\nimport Exchange from './Exchange';\nimport GetDate from './GetData';\n\nconst Currency = ({symbol, totals, setTotals}) => {\n  const [deposit, setDeposit] = useState(0);\n  const [totalState, setTotalState] = useState(0);\n\n  const [isDeposit, setIsDeposit] = useState(true);\n  const [atmMode, setAtmMode] = useState(\"\");\n  const [validTransaction, setValidTransaction] = useState(false);\n\n  let status = `${symbol} Balance: ${totalState} `;\n  const handleChange = (event) => {\n    const returnValue = event.target.value;\n    setDeposit(Number(returnValue));\n    if(returnValue <= 0){\n      setValidTransaction(false);\n      return;\n    }\n    else if(atmMode === \"Withdraw\" && returnValue > totalState) {\n      setValidTransaction(false);\n      return;\n    }\n    else {\n      setValidTransaction(true);\n      return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    let newTotal = isDeposit ? totalState + deposit : totalState - deposit;\n    setTotalState(newTotal);\n    setTotals([...totals, {symbol: symbol, total: newTotal, timestamp: GetDate(), action: atmMode + \" \" + symbol + \": \" + deposit}])\n    setValidTransaction(false);\n    event.preventDefault();\n  };\n\n  const handleModeSelect = (event) => {\n    const selectedValue = event.target.value;\n    setAtmMode(selectedValue);\n    if(selectedValue === \"Deposit\"){\n      setIsDeposit(true);\n    } else if (selectedValue === \"Withdraw\"){\n      setIsDeposit(false);\n    }\n  }\n\n  return (\n    <>\n    <Card>\n      <Card.Body>\n        <form onSubmit={handleSubmit}>\n        <Card.Title id=\"total\">{status}</Card.Title>\n        <Card.Subtitle>\n          <label>USD Value: $<USDValue symbol={symbol} total={totalState}/></label>\n        </Card.Subtitle>\n        <Card.Text>\n          <label>Action:</label>\n          <select onChange={(e) => handleModeSelect(e)} name=\"mode\" id=\"mode-select\">\n            <option id=\"no-selection\" value=\"\"></option>\n            <option id=\"deposit-selection\" value=\"Deposit\">Deposit</option>\n            <option id=\"withdraw-selection\" value=\"Withdraw\">Withdraw</option>\n            <option id=\"exchange-selection\" value=\"Exchange\">Exchange</option>\n          </select>\n          { (atmMode === \"Deposit\" || atmMode === \"Withdraw\") &&\n            <Transactor onChange={handleChange} isDeposit={isDeposit} validTransaction={validTransaction} currency={symbol} />\n          }\n        </Card.Text>\n      </form>\n      {\n      atmMode === \"Exchange\" &&\n        <Exchange symbol={symbol} total={totalState} />\n      }\n      </Card.Body>\n    </Card>\n    </>\n  );\n};\n\nexport default Currency","import Table from 'react-bootstrap/Table';\nconst History = ({ totals }) => {\nconst createRow = (t) => {\n  return (\n    <tr key={'row-' + t.symbol + \"-\" + t.timestamp.getTime()}>\n      <td>{ t.symbol }</td>\n      <td>{ t.action }</td>\n      <td>{ t.timestamp.toString() }</td>\n    </tr>\n  )\n}\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Currency</th>\n          <th>Action</th>\n          <th>Timestamp</th>\n        </tr>\n      </thead>\n      <tbody>\n          { totals.map(t => createRow(t)) }\n      </tbody>\n  </Table>\n  )\n}\n\nexport default History","import { useState } from 'react';\nimport Currency from './js/Account'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport GetDate from './js/GetData';\nimport History from './js/History';\n\nconst initDate = GetDate();\nconst initialTotals = [\n  { symbol: \"USD\", total: 0, timestamp: initDate, action: \"Account Created\" },\n  { symbol: \"BTC\", total: 0, timestamp: initDate, action: \"Account Created\" },\n  { symbol: \"ETH\", total: 0, timestamp: initDate, action: \"Account Created\" },\n  { symbol: \"XRP\", total: 0, timestamp: initDate, action: \"Account Created\" },\n  { symbol: \"BNB\", total: 0, timestamp: initDate, action: \"Account Created\" }\n];\n\nconst App = () => {\n  const [totals, setTotals] = useState(initialTotals);\n  const getTotals = () => {\n    totals.sort((a, b) => b.timestamp - a.timestamp);\n    let x = totals.filter((v,i,a) => a.findIndex(t => (t.symbol === v.symbol && +t.timestamp >= +v.timestamp)) === i).sort((a, b) => a.symbol.localeCompare(b.symbol));\n\n    return x.map(currency => {\n      return (<Currency symbol={currency.symbol} totals={totals} setTotals={setTotals} id={\"Currency-\" + currency.symbol} key={\"Currency-\" + currency.symbol}/>);\n    })\n  }\n  return (\n    <div>\n      <Jumbotron fluid>\n        <Container>\n          <h1>Crypto Bank</h1>\n          <p>\n            Welcome back, please enjoy that the features we have to offer to managing your profolio!\n          </p>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <CardDeck>\n          {\n            getTotals()\n          }\n        </CardDeck>\n      </Container>\n      <Container style={{ paddingTop: \"25px\" }}>\n        <History totals={totals}/>\n      </Container>\n    </div>\n  )\n};\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}